//复制到粘贴板
function copyToClipboard(txt) {   
	       if(window.clipboardData) {   
	               window.clipboardData.clearData();   
	               window.clipboardData.setData("Text", txt);
	             alert("复制成功");   
	       } else if(navigator.userAgent.indexOf("Opera") != -1) {   
	            window.location = txt;   
	       } else if (window.netscape) {   
	            try {   
	                 netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");   
	            } catch (e) {   
	                 alert("如果您正在使用FireFox！\n请在浏览器地址栏输入'about:config'并回车\n然后将 'signed.applets.codebase_principal_support'设置为'true'");   
	            }   
	            var clip = Components.classes['@mozilla.org/widget/clipboard;1'].createInstance(Components.interfaces.nsIClipboard);   
	            if (!clip)   
	                 return;   
	            var trans = Components.classes['@mozilla.org/widget/transferable;1'].createInstance(Components.interfaces.nsITransferable);   
	            if (!trans)   
	                 return;   
	            trans.addDataFlavor('text/unicode');   
	            var str = new Object();   
	            var len = new Object();   
	            var str = Components.classes["@mozilla.org/supports-string;1"].createInstance(Components.interfaces.nsISupportsString);   
	            var copytext = txt;   
	            str.data = copytext;   
	            trans.setTransferData("text/unicode",str,copytext.length*2);   
	            var clipid = Components.interfaces.nsIClipboard;   
	            if (!clip)   
	                 return false;   
	            clip.setData(trans,null,clipid.kGlobalClipboard);   
	            alert("复制成功！")   
	       }   
	}

	/*
	 * 格式化实数
	 */
	function decimalFormat(number, precision) {
		  var str = "" + number;
		  var i;
		  if(0<str.indexOf(".")){
		  	  i = str.indexOf(".");
		  	  return Number(str.substring(0,i+1+precision));
		  }else{
			  return number;
		  }
	}

	/**     
	* 对Date的扩展，将 Date 转化为指定格式的String     
	* 月(M)、日(d)、12小时(h)、24小时(H)、分(m)、秒(s)、周(E)、季度(q) 可以用 1-2 个占位符     
	* 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)     
	* eg:     
	* (new Date()).pattern("yyyy-MM-dd hh:mm:ss.S") ==> 2006-07-02 08:09:04.423     
	* (new Date()).pattern("yyyy-MM-dd E HH:mm:ss") ==> 2009-03-10 二 20:09:04     
	* (new Date()).pattern("yyyy-MM-dd EE hh:mm:ss") ==> 2009-03-10 周二 08:09:04     
	* (new Date()).pattern("yyyy-MM-dd EEE hh:mm:ss") ==> 2009-03-10 星期二 08:09:04     
	* (new Date()).pattern("yyyy-M-d h:m:s.S") ==> 2006-7-2 8:9:4.18     
	*/
	Date.prototype.pattern=function(fmt) {        
        var o = {        
        "M+" : this.getMonth()+1, //月份        
        "d+" : this.getDate(), //日        
        "h+" : this.getHours()%12 == 0 ? 12 : this.getHours()%12, //小时        
        "H+" : this.getHours(), //小时        
        "m+" : this.getMinutes(), //分        
        "s+" : this.getSeconds(), //秒        
        "q+" : Math.floor((this.getMonth()+3)/3), //季度        
        "S" : this.getMilliseconds() //毫秒        
        };        
        var week = {        
        "0" : "\u65e5",        
        "1" : "\u4e00",        
        "2" : "\u4e8c",        
        "3" : "\u4e09",        
        "4" : "\u56db",        
        "5" : "\u4e94",        
        "6" : "\u516d"     
        };        
        if(/(y+)/.test(fmt)){        
                fmt=fmt.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));        
        }        
        if(/(E+)/.test(fmt)){        
                fmt=fmt.replace(RegExp.$1, ((RegExp.$1.length>1) ? (RegExp.$1.length>2 ? "\u661f\u671f" : "\u5468") : "")+week[this.getDay()+""]);        
        }        
        for(var k in o){        
                if(new RegExp("("+ k +")").test(fmt)){        
                        fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length)));        
                }        
        }        
        return fmt;        
}

/**
 * url:发送给服务器的地址！
 * params:参数信息，格式为json，例如{id:'1',name:'zhangsan'}
 * loadmask:boolean 如果为true 则创建一个mask
 * compId:需要被罩住的控件的id
 * waitText:被罩住时显示的字符串
 */
function post(config){
	var mask;
	if(config.loadmask){
		mask = new Ext.LoadMask(config.compId, {
		     msg : config.waitText
		});
		mask.show();
	}
	
	Ext.Ajax.request({
		url:config.url,
		params:config.params,
		method:'POST',
		success:function(response, options){
			if(mask)
				 mask.hide();
			var responseArray = Ext.util.JSON.decode(response.responseText); 
			var resp = responseArray.result[0];
			 if(resp.success==true){
				 if(resp.msg)
					 Ext.Msg.alert('提示',resp.msg);
				 else
					 Ext.Msg.alert('提示','处理完毕!');
			 }else{
				 Ext.Msg.alert('提示','服务器没有响应，请稍后再试！');
			 }
		}
	});
}

/**
 * 动态刷新flash
 * @param tagName object标签的name属性
 * @param index  要修改对象在getElementsByName()返回的对象集合的位置
 * @param methodName url改变后的方法名称
 * @return 
 */
function changeChart(tagName,index,methodName){
	var objs = document.getElementsByName(tagName);
	var object = objs[index];
	var objectClone = object.cloneNode(true);
	var url1 = object.childNodes[1].value;
	objectClone.childNodes[1].value=url1.replace(url1.substring(url1.lastIndexOf('method%3D'),url1.length),'method%3D'+methodName);
	
	/*var embed = objs[1];
	var embedClone = embed.cloneNode(true);
	var url2 = embed.src;
	embedClone.src=url2.replance(url2.substring(url2.lastIndexOf('method%3D'),url2.length),'method%3D'+methodName);*/

	object.replaceNode(objectClone);
	//embed.replaceNode(embedClone);
}

function submit_failure(form,action){
	Ext.Msg.alert('提示',action.result.msg);
}

/**
 * @param title 页面标题 
 * @param iconCls 页面图标
 * @param url 页面加载请求url
 * @param iframeWidth 内嵌窗口宽
 * @param iframeHeight 内嵌窗口高
 * @param iframeId 提交的form表单ID
 * @return 
 */
function createFormPage(config){	
	var tab = frame.tabs.getActiveTab();
	var panel = new Ext.Panel({		
		title:config.title,
		closable: true,
		iconCls:config.iconCls,
		autoScroll:true,
		html:'<center><IFRAME ID='+config.iframeId+' WIDTH='+config.iframeWidth+' HEIGHT='+config.iframeHeight+' FRAMEBORDER=0 SCROLLING=TRUE SRC="'+config.url+'"/></center>',		
		bbar:[{
			text:'保存',
			handler:function(){
				var doc = Ext.get(config.iframeId).dom.contentWindow.document;								
				doc.forms[0].submit();
				frame.tabs.remove(panel);
				panel.destroy();
				frame.tabs.activate(tab);
			},
			scope:this
		},{
			text:'打印预览',
			handler:function(){
				var win = Ext.get(config.iframeId).dom.contentWindow;
				window.open (config.url,"newwindow","toolbar=no, menubar=yes, scrollbars=yes, resizable=yes, location=no, status=no");				
			},
			scope:this
		}]
	});
	frame.tabs.add(panel).show();
}

/**
 * 判断variable是否存在
 * @param variable
 * @return
 */
function isUndefined(variable) {
	return typeof variable == 'undefined' ? true : false;
}

function printsetup(){ 
	// 打印页面设置 
	wb.execwb(8,1); 
} 

function printpreview(){ 
	// 打印页面预览 　　　　 
	wb.execwb(7,1);
} 

function print() {
	//打印
	if (confirm('确定打印吗？')) { 
		wb.execwb(6,6); 
	} 
}

/** 使用操作权限的方法如下：参数operateIds为操作权限的Id号，而且要把按钮的id属性设置为相应的权限Id
 * url:发送给服务器的地址！
 * params:参数信息，格式为json，例如{id:'1',name:'zhangsan'}
 * return:返回请求store
 */
function getLimitStore(config){
	var limit = new Ext.data.JsonStore({
		url: config.url,
		baseParams: config.params,
		root:"result",
		fields:["id","name","result"],
		listeners:{
			'beforeload': function(storeThis,option){
				storeThis.removeAll();
			},
			'load': function(storeThis,records,options){
				for(var i=0;i<records.length;i++){						
					var btn = Ext.getCmp(records[i].get('id'));
					if(btn&&null!=btn)
						btn.setDisabled(!records[i].get('result'));					
				}
			}
		}
	});
	return limit;
}
